// <auto-generated />
using System;
using EduCore.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduCore.Infrastructure.Migrations
{
    [DbContext(typeof(CoursesDbContext))]
    partial class CoursesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduCore.Domain.Category", b =>
            {
                b.Property<int>("CategoryId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("CategoryID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)");

                b.HasKey("CategoryId")
                    .HasName("PK__Categori__19093A2B4E099F62");

                b.ToTable("Categories");

                b.HasData(
                    new
                    {
                        CategoryId = 1,
                        Name = "IT"
                    },
                    new
                    {
                        CategoryId = 2,
                        Name = "Business"
                    },
                    new
                    {
                        CategoryId = 3,
                        Name = "Design"
                    },
                    new
                    {
                        CategoryId = 4,
                        Name = "Marketing"
                    },
                    new
                    {
                        CategoryId = 5,
                        Name = "Logistics"
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Certificate", b =>
            {
                b.Property<int>("CertificateId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"));

                b.Property<string>("CertificateUrl")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("IssuedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("CertificateId");

                b.ToTable("Certificates");

                b.HasData(
                    new
                    {
                        CertificateId = 1,
                        CertificateUrl = "https://example.com/certificate1",
                        Description = "Description for Certificate 1",
                        IssuedBy = "Issuing Authority 1",
                        Title = "Certificate 1"
                    },
                    new
                    {
                        CertificateId = 2,
                        CertificateUrl = "https://example.com/certificate2",
                        Description = "Description for Certificate 2",
                        IssuedBy = "Issuing Authority 2",
                        Title = "Certificate 2"
                    },
                    new
                    {
                        CertificateId = 3,
                        CertificateUrl = "https://example.com/certificate3",
                        Description = "Description for Certificate 3",
                        IssuedBy = "Issuing Authority 3",
                        Title = "Certificate 3"
                    },
                    new
                    {
                        CertificateId = 4,
                        CertificateUrl = "https://example.com/certificate4",
                        Description = "Description for Certificate 4",
                        IssuedBy = "Issuing Authority 4",
                        Title = "Certificate 4"
                    },
                    new
                    {
                        CertificateId = 5,
                        CertificateUrl = "https://example.com/certificate5",
                        Description = "Description for Certificate 5",
                        IssuedBy = "Issuing Authority 5",
                        Title = "Certificate 5"
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Checkout", b =>
            {
                b.Property<int>("CheckoutId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("CheckoutID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckoutId"));

                b.Property<decimal>("Amount")
                    .HasColumnType("decimal(10, 2)");

                b.Property<int?>("CourseId")
                    .HasColumnType("int")
                    .HasColumnName("CourseID");

                b.Property<DateTime>("PaymentDate")
                    .HasColumnType("date");

                b.Property<string>("PaymentStatus")
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)");

                b.Property<int?>("StudentId")
                    .HasColumnType("int")
                    .HasColumnName("StudentID");

                b.Property<string>("TransactionId")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("TransactionID");

                b.HasKey("CheckoutId")
                    .HasName("PK__Checkout__E07EF51CCFBA1268");

                b.HasIndex("CourseId");

                b.HasIndex("StudentId");

                b.ToTable("Checkouts");

                b.HasData(
                    new
                    {
                        CheckoutId = 1,
                        Amount = 50m,
                        CourseId = 1,
                        PaymentDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9667),
                        PaymentStatus = "Paid",
                        StudentId = 1,
                        TransactionId = "1ABD"
                    },
                    new
                    {
                        CheckoutId = 2,
                        Amount = 75m,
                        CourseId = 2,
                        PaymentDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9680),
                        PaymentStatus = "Pending",
                        StudentId = 1,
                        TransactionId = "16AHD"
                    },
                    new
                    {
                        CheckoutId = 3,
                        Amount = 100m,
                        CourseId = 3,
                        PaymentDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9682),
                        PaymentStatus = "Failed",
                        StudentId = 1,
                        TransactionId = "1ABDOD"
                    },
                    new
                    {
                        CheckoutId = 4,
                        Amount = 120m,
                        CourseId = 4,
                        PaymentDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9685),
                        PaymentStatus = "Paid",
                        StudentId = 4,
                        TransactionId = "1ADFHBD"
                    },
                    new
                    {
                        CheckoutId = 5,
                        Amount = 80m,
                        CourseId = 5,
                        PaymentDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9686),
                        PaymentStatus = "Pending",
                        StudentId = 4,
                        TransactionId = "1ABDD"
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Course", b =>
            {
                b.Property<int>("CourseId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("CourseID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                b.Property<string>("Description")
                    .HasColumnType("text");

                b.Property<string>("Duration")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)");

                b.Property<int?>("InstructorId")
                    .HasColumnType("int")
                    .HasColumnName("InstructorID");

                b.Property<string>("Level")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)");

                b.Property<decimal?>("Price")
                    .HasColumnType("decimal(10, 2)");

                b.Property<decimal?>("Rating")
                    .HasColumnType("decimal(2, 1)");

                b.Property<int>("Sale")
                    .HasColumnType("int");

                b.Property<int?>("SubCategoryId")
                    .HasColumnType("int")
                    .HasColumnName("SubCategoryId");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)");

                b.Property<string>("Url")
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("URL");

                b.HasKey("CourseId")
                    .HasName("PK__Courses__C92D71876D4CFFEC");

                b.HasIndex("InstructorId");

                b.HasIndex("SubCategoryId");

                b.ToTable("Courses");

                b.HasData(
                    new
                    {
                        CourseId = 1,
                        Description = "Learn the basics of C# programming.",
                        Duration = "5 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 150000m,
                        Rating = 4.5m,
                        Sale = 10,
                        SubCategoryId = 1,
                        Title = "Introduction to C#",
                        Url = "https://example.com/course1"
                    },
                    new
                    {
                        CourseId = 2,
                        Description = "Deep dive into advanced C# topics.",
                        Duration = "10 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 500000m,
                        Rating = 4.7m,
                        Sale = 15,
                        SubCategoryId = 1,
                        Title = "Advanced C# Programming",
                        Url = "https://example.com/course2"
                    },
                    new
                    {
                        CourseId = 3,
                        Description = "Build web applications using C#.",
                        Duration = "8 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 459000m,
                        Rating = 4.6m,
                        Sale = 12,
                        SubCategoryId = 1,
                        Title = "C# for Web Development",
                        Url = "https://example.com/course3"
                    },
                    new
                    {
                        CourseId = 4,
                        Description = "Learn design patterns in C#.",
                        Duration = "7 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 280000m,
                        Rating = 4.8m,
                        Sale = 10,
                        SubCategoryId = 1,
                        Title = "C# Design Patterns",
                        Url = "https://example.com/course4"
                    },
                    new
                    {
                        CourseId = 5,
                        Description = "Develop mobile apps using C#.",
                        Duration = "6 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 370000m,
                        Rating = 4.4m,
                        Sale = 8,
                        SubCategoryId = 1,
                        Title = "C# for Mobile Development",
                        Url = "https://example.com/course5"
                    },
                    new
                    {
                        CourseId = 6,
                        Description = "Learn the basics of Data Science.",
                        Duration = "5 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 400000m,
                        Rating = 4.5m,
                        Sale = 10,
                        SubCategoryId = 2,
                        Title = "Introduction to Data Science",
                        Url = "https://example.com/course6"
                    },
                    new
                    {
                        CourseId = 7,
                        Description = "Deep dive into Machine Learning.",
                        Duration = "10 hours",
                        InstructorId = 3,
                        Level = "Advanced",
                        Price = 320000m,
                        Rating = 4.7m,
                        Sale = 15,
                        SubCategoryId = 2,
                        Title = "Machine Learning with Python",
                        Url = "https://example.com/course7"
                    },
                    new
                    {
                        CourseId = 8,
                        Description = "Analyze data using R.",
                        Duration = "8 hours",
                        InstructorId = 2,
                        Level = "Intermediate",
                        Price = 280000m,
                        Rating = 4.6m,
                        Sale = 12,
                        SubCategoryId = 2,
                        Title = "Data Analysis with R",
                        Url = "https://example.com/course8"
                    },
                    new
                    {
                        CourseId = 9,
                        Description = "Learn Big Data technologies.",
                        Duration = "7 hours",
                        InstructorId = 3,
                        Level = "Advanced",
                        Price = 150000m,
                        Rating = 4.8m,
                        Sale = 10,
                        SubCategoryId = 2,
                        Title = "Big Data with Hadoop",
                        Url = "https://example.com/course9"
                    },
                    new
                    {
                        CourseId = 10,
                        Description = "Visualize data with Tableau.",
                        Duration = "6 hours",
                        InstructorId = 2,
                        Level = "Intermediate",
                        Price = 459000m,
                        Rating = 4.4m,
                        Sale = 8,
                        SubCategoryId = 2,
                        Title = "Data Visualization with Tableau",
                        Url = "https://example.com/course10"
                    },
                    new
                    {
                        CourseId = 11,
                        Description = "Learn the basics of networking.",
                        Duration = "5 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 280000m,
                        Rating = 4.5m,
                        Sale = 10,
                        SubCategoryId = 3,
                        Title = "Networking Basics",
                        Url = "https://example.com/course11"
                    },
                    new
                    {
                        CourseId = 12,
                        Description = "Deep dive into networking.",
                        Duration = "10 hours",
                        InstructorId = 3,
                        Level = "Advanced",
                        Price = 500000m,
                        Rating = 4.7m,
                        Sale = 15,
                        SubCategoryId = 3,
                        Title = "Advanced Networking",
                        Url = "https://example.com/course12"
                    },
                    new
                    {
                        CourseId = 13,
                        Description = "Learn network security.",
                        Duration = "8 hours",
                        InstructorId = 2,
                        Level = "Intermediate",
                        Price = 150000m,
                        Rating = 4.6m,
                        Sale = 12,
                        SubCategoryId = 3,
                        Title = "Network Security",
                        Url = "https://example.com/course13"
                    },
                    new
                    {
                        CourseId = 14,
                        Description = "Learn Cisco networking.",
                        Duration = "7 hours",
                        InstructorId = 3,
                        Level = "Advanced",
                        Price = 459000m,
                        Rating = 4.8m,
                        Sale = 10,
                        SubCategoryId = 3,
                        Title = "Cisco Networking",
                        Url = "https://example.com/course14"
                    },
                    new
                    {
                        CourseId = 15,
                        Description = "Learn wireless networking.",
                        Duration = "6 hours",
                        InstructorId = 2,
                        Level = "Intermediate",
                        Price = 370000m,
                        Rating = 4.4m,
                        Sale = 8,
                        SubCategoryId = 3,
                        Title = "Wireless Networking",
                        Url = "https://example.com/course15"
                    },
                    new
                    {
                        CourseId = 16,
                        Description = "Learn the basics of cyber security.",
                        Duration = "5 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 100000m,
                        Rating = 4.5m,
                        Sale = 10,
                        SubCategoryId = 4,
                        Title = "Introduction to Cyber Security",
                        Url = "https://example.com/course16"
                    },
                    new
                    {
                        CourseId = 17,
                        Description = "Deep dive into cyber security.",
                        Duration = "10 hours",
                        InstructorId = 3,
                        Level = "Advanced",
                        Price = 459000m,
                        Rating = 4.7m,
                        Sale = 15,
                        SubCategoryId = 4,
                        Title = "Advanced Cyber Security",
                        Url = "https://example.com/course17"
                    },
                    new
                    {
                        CourseId = 18,
                        Description = "Learn penetration testing.",
                        Duration = "8 hours",
                        InstructorId = 2,
                        Level = "Intermediate",
                        Price = 280000m,
                        Rating = 4.6m,
                        Sale = 12,
                        SubCategoryId = 4,
                        Title = "Penetration Testing",
                        Url = "https://example.com/course18"
                    },
                    new
                    {
                        CourseId = 19,
                        Description = "Manage cyber security projects.",
                        Duration = "7 hours",
                        InstructorId = 3,
                        Level = "Advanced",
                        Price = 320000m,
                        Rating = 4.8m,
                        Sale = 10,
                        SubCategoryId = 4,
                        Title = "Cyber Security Management",
                        Url = "https://example.com/course19"
                    },
                    new
                    {
                        CourseId = 20,
                        Description = "Learn cyber forensics.",
                        Duration = "6 hours",
                        InstructorId = 2,
                        Level = "Intermediate",
                        Price = 150000m,
                        Rating = 4.4m,
                        Sale = 8,
                        SubCategoryId = 4,
                        Title = "Cyber Forensics",
                        Url = "https://example.com/course20"
                    },
                    new
                    {
                        CourseId = 21,
                        Description = "Learn the basics of cloud computing.",
                        Duration = "5 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 459000m,
                        Rating = 4.5m,
                        Sale = 10,
                        SubCategoryId = 5,
                        Title = "Cloud Computing Basics",
                        Url = "https://example.com/course21"
                    },
                    new
                    {
                        CourseId = 22,
                        Description = "Deep dive into cloud computing.",
                        Duration = "10 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 280000m,
                        Rating = 4.7m,
                        Sale = 15,
                        SubCategoryId = 5,
                        Title = "Advanced Cloud Computing",
                        Url = "https://example.com/course22"
                    },
                    new
                    {
                        CourseId = 23,
                        Description = "Learn AWS basics.",
                        Duration = "8 hours",
                        InstructorId = 2,
                        Level = "Intermediate",
                        Price = 150000m,
                        Rating = 4.6m,
                        Sale = 12,
                        SubCategoryId = 5,
                        Title = "AWS for Beginners",
                        Url = "https://example.com/course23"
                    },
                    new
                    {
                        CourseId = 24,
                        Description = "Learn Azure fundamentals.",
                        Duration = "7 hours",
                        InstructorId = 3,
                        Level = "Advanced",
                        Price = 500000m,
                        Rating = 4.8m,
                        Sale = 10,
                        SubCategoryId = 5,
                        Title = "Azure Fundamentals",
                        Url = "https://example.com/course24"
                    },
                    new
                    {
                        CourseId = 25,
                        Description = "Learn Google Cloud Platform.",
                        Duration = "6 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 370000m,
                        Rating = 4.4m,
                        Sale = 8,
                        SubCategoryId = 5,
                        Title = "Google Cloud Platform",
                        Url = "https://example.com/course25"
                    },
                    new
                    {
                        CourseId = 30,
                        Description = "Learn the basics of entrepreneurship.",
                        Duration = "10 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 150000m,
                        Rating = 4.5m,
                        Sale = 15,
                        SubCategoryId = 6,
                        Title = "Entrepreneurship Basics",
                        Url = "https://example.com/course1"
                    },
                    new
                    {
                        CourseId = 31,
                        Description = "Master the fundamentals of starting a business.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 150000m,
                        Rating = 4.7m,
                        Sale = 20,
                        SubCategoryId = 6,
                        Title = "Startup Fundamentals",
                        Url = "https://example.com/course2"
                    },
                    new
                    {
                        CourseId = 32,
                        Description = "Strategies for scaling your startup.",
                        Duration = "15 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 320000m,
                        Rating = 4.9m,
                        Sale = 25,
                        SubCategoryId = 6,
                        Title = "Scaling Your Startup",
                        Url = "https://example.com/course3"
                    },
                    new
                    {
                        CourseId = 33,
                        Description = "Essential management techniques.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 150000m,
                        Rating = 4.6m,
                        Sale = 10,
                        SubCategoryId = 7,
                        Title = "Management Essentials",
                        Url = "https://example.com/course4"
                    },
                    new
                    {
                        CourseId = 34,
                        Description = "Develop essential leadership skills.",
                        Duration = "18 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 320000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 7,
                        Title = "Leadership Skills",
                        Url = "https://example.com/course5"
                    },
                    new
                    {
                        CourseId = 35,
                        Description = "Master the art of team building.",
                        Duration = "8 hours",
                        InstructorId = 3,
                        Level = "Beginner",
                        Price = 320000m,
                        Rating = 4.6m,
                        Sale = 15,
                        SubCategoryId = 7,
                        Title = "Team Building Strategies",
                        Url = "https://example.com/course6"
                    },
                    new
                    {
                        CourseId = 36,
                        Description = "A beginner's guide to finance.",
                        Duration = "12 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 150000m,
                        Rating = 4.7m,
                        Sale = 10,
                        SubCategoryId = 8,
                        Title = "Finance for Beginners",
                        Url = "https://example.com/course7"
                    },
                    new
                    {
                        CourseId = 37,
                        Description = "Learn how to analyze financial statements.",
                        Duration = "18 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 320000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 8,
                        Title = "Financial Analysis",
                        Url = "https://example.com/course8"
                    },
                    new
                    {
                        CourseId = 38,
                        Description = "Advanced strategies for investing in the stock market.",
                        Duration = "25 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 320000m,
                        Rating = 4.9m,
                        Sale = 30,
                        SubCategoryId = 8,
                        Title = "Advanced Investment Strategies",
                        Url = "https://example.com/course9"
                    },
                    new
                    {
                        CourseId = 39,
                        Description = "An introduction to human resource management.",
                        Duration = "10 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 180000m,
                        Rating = 4.5m,
                        Sale = 15,
                        SubCategoryId = 9,
                        Title = "Introduction to HR Management",
                        Url = "https://example.com/course10"
                    },
                    new
                    {
                        CourseId = 40,
                        Description = "Effective strategies for managing employee relations.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 200000m,
                        Rating = 4.7m,
                        Sale = 20,
                        SubCategoryId = 9,
                        Title = "Employee Relations",
                        Url = "https://example.com/course11"
                    },
                    new
                    {
                        CourseId = 41,
                        Description = "Strategies for effective talent acquisition.",
                        Duration = "15 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 350000m,
                        Rating = 4.9m,
                        Sale = 25,
                        SubCategoryId = 9,
                        Title = "Talent Acquisition",
                        Url = "https://example.com/course12"
                    },
                    new
                    {
                        CourseId = 42,
                        Description = "Effective sales techniques.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 160000m,
                        Rating = 4.6m,
                        Sale = 10,
                        SubCategoryId = 10,
                        Title = "Sales Techniques",
                        Url = "https://example.com/course13"
                    },
                    new
                    {
                        CourseId = 43,
                        Description = "Mastering negotiation skills.",
                        Duration = "18 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 330000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 10,
                        Title = "Negotiation Skills",
                        Url = "https://example.com/course14"
                    },
                    new
                    {
                        CourseId = 44,
                        Description = "Strategies for effective closing of sales.",
                        Duration = "8 hours",
                        InstructorId = 3,
                        Level = "Beginner",
                        Price = 330000m,
                        Rating = 4.6m,
                        Sale = 15,
                        SubCategoryId = 10,
                        Title = "Closing Strategies",
                        Url = "https://example.com/course15"
                    },
                    new
                    {
                        CourseId = 45,
                        Description = "An introduction to graphic design principles.",
                        Duration = "12 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 170000m,
                        Rating = 4.7m,
                        Sale = 10,
                        SubCategoryId = 11,
                        Title = "Introduction to Graphic Design",
                        Url = "https://example.com/course16"
                    },
                    new
                    {
                        CourseId = 46,
                        Description = "Mastering typography in design.",
                        Duration = "18 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 300000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 11,
                        Title = "Typography Fundamentals",
                        Url = "https://example.com/course17"
                    },
                    new
                    {
                        CourseId = 47,
                        Description = "Mastering the art of logo design.",
                        Duration = "25 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 300000m,
                        Rating = 4.9m,
                        Sale = 30,
                        SubCategoryId = 11,
                        Title = "Logo Design Mastery",
                        Url = "https://example.com/course18"
                    },
                    new
                    {
                        CourseId = 48,
                        Description = "Designing responsive websites.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 180000m,
                        Rating = 4.6m,
                        Sale = 15,
                        SubCategoryId = 12,
                        Title = "Responsive Web Design",
                        Url = "https://example.com/course19"
                    },
                    new
                    {
                        CourseId = 49,
                        Description = "Creating effective user interfaces.",
                        Duration = "18 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 330000m,
                        Rating = 4.8m,
                        Sale = 25,
                        SubCategoryId = 12,
                        Title = "User Interface Design",
                        Url = "https://example.com/course20"
                    },
                    new
                    {
                        CourseId = 50,
                        Description = "Ensuring web accessibility standards.",
                        Duration = "8 hours",
                        InstructorId = 3,
                        Level = "Beginner",
                        Price = 330000m,
                        Rating = 4.6m,
                        Sale = 20,
                        SubCategoryId = 12,
                        Title = "Web Accessibility",
                        Url = "https://example.com/course21"
                    },
                    new
                    {
                        CourseId = 51,
                        Description = "Fundamentals of UI design.",
                        Duration = "10 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 190000m,
                        Rating = 4.5m,
                        Sale = 15,
                        SubCategoryId = 13,
                        Title = "UI Design Fundamentals",
                        Url = "https://example.com/course22"
                    },
                    new
                    {
                        CourseId = 52,
                        Description = "Creating great user experiences.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 200000m,
                        Rating = 4.7m,
                        Sale = 20,
                        SubCategoryId = 13,
                        Title = "User Experience Design",
                        Url = "https://example.com/course23"
                    },
                    new
                    {
                        CourseId = 53,
                        Description = "Designing interactive experiences.",
                        Duration = "15 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 350000m,
                        Rating = 4.9m,
                        Sale = 25,
                        SubCategoryId = 13,
                        Title = "Interaction Design",
                        Url = "https://example.com/course24"
                    },
                    new
                    {
                        CourseId = 54,
                        Description = "Basics of 2D animation.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 160000m,
                        Rating = 4.6m,
                        Sale = 10,
                        SubCategoryId = 14,
                        Title = "2D Animation Basics",
                        Url = "https://example.com/course25"
                    },
                    new
                    {
                        CourseId = 55,
                        Description = "Creating character animations.",
                        Duration = "18 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 330000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 14,
                        Title = "Character Animation",
                        Url = "https://example.com/course26"
                    },
                    new
                    {
                        CourseId = 56,
                        Description = "Creating engaging motion graphics.",
                        Duration = "8 hours",
                        InstructorId = 3,
                        Level = "Beginner",
                        Price = 330000m,
                        Rating = 4.6m,
                        Sale = 15,
                        SubCategoryId = 14,
                        Title = "Motion Graphics",
                        Url = "https://example.com/course27"
                    },
                    new
                    {
                        CourseId = 57,
                        Description = "Basic principles of interior design.",
                        Duration = "12 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 170000m,
                        Rating = 4.7m,
                        Sale = 10,
                        SubCategoryId = 15,
                        Title = "Interior Design Basics",
                        Url = "https://example.com/course28"
                    },
                    new
                    {
                        CourseId = 58,
                        Description = "Understanding color theory in design.",
                        Duration = "18 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 300000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 15,
                        Title = "Color Theory in Design",
                        Url = "https://example.com/course29"
                    },
                    new
                    {
                        CourseId = 59,
                        Description = "Effective space planning strategies.",
                        Duration = "25 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 300000m,
                        Rating = 4.9m,
                        Sale = 30,
                        SubCategoryId = 15,
                        Title = "Space Planning",
                        Url = "https://example.com/course30"
                    },
                    new
                    {
                        CourseId = 60,
                        Description = "Fundamentals of digital marketing.",
                        Duration = "10 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 180000m,
                        Rating = 4.5m,
                        Sale = 15,
                        SubCategoryId = 16,
                        Title = "Digital Marketing Fundamentals",
                        Url = "https://example.com/course31"
                    },
                    new
                    {
                        CourseId = 61,
                        Description = "Effective social media marketing strategies.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 200000m,
                        Rating = 4.7m,
                        Sale = 20,
                        SubCategoryId = 16,
                        Title = "Social Media Strategies",
                        Url = "https://example.com/course32"
                    },
                    new
                    {
                        CourseId = 62,
                        Description = "Fundamentals of search engine optimization.",
                        Duration = "15 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 350000m,
                        Rating = 4.9m,
                        Sale = 25,
                        SubCategoryId = 16,
                        Title = "SEO Fundamentals",
                        Url = "https://example.com/course33"
                    },
                    new
                    {
                        CourseId = 63,
                        Description = "Developing a content marketing strategy.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 160000m,
                        Rating = 4.6m,
                        Sale = 10,
                        SubCategoryId = 17,
                        Title = "Content Marketing Strategy",
                        Url = "https://example.com/course34"
                    },
                    new
                    {
                        CourseId = 64,
                        Description = "Starting a successful blog.",
                        Duration = "18 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 330000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 17,
                        Title = "Blogging for Beginners",
                        Url = "https://example.com/course35"
                    },
                    new
                    {
                        CourseId = 65,
                        Description = "Using video for marketing purposes.",
                        Duration = "8 hours",
                        InstructorId = 3,
                        Level = "Beginner",
                        Price = 330000m,
                        Rating = 4.6m,
                        Sale = 15,
                        SubCategoryId = 17,
                        Title = "Video Marketing",
                        Url = "https://example.com/course36"
                    },
                    new
                    {
                        CourseId = 66,
                        Description = "Advertising on social media platforms.",
                        Duration = "12 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 170000m,
                        Rating = 4.7m,
                        Sale = 10,
                        SubCategoryId = 18,
                        Title = "Social Media Advertising",
                        Url = "https://example.com/course37"
                    },
                    new
                    {
                        CourseId = 67,
                        Description = "Strategies for influencer marketing.",
                        Duration = "18 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 300000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 18,
                        Title = "Influencer Marketing",
                        Url = "https://example.com/course38"
                    },
                    new
                    {
                        CourseId = 68,
                        Description = "Managing communities on social media.",
                        Duration = "25 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 300000m,
                        Rating = 4.9m,
                        Sale = 30,
                        SubCategoryId = 18,
                        Title = "Community Management",
                        Url = "https://example.com/course39"
                    },
                    new
                    {
                        CourseId = 69,
                        Description = "Optimizing on-page factors for SEO.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 180000m,
                        Rating = 4.6m,
                        Sale = 15,
                        SubCategoryId = 19,
                        Title = "On-Page SEO",
                        Url = "https://example.com/course40"
                    },
                    new
                    {
                        CourseId = 70,
                        Description = "Effective strategies for link building.",
                        Duration = "18 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 330000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 19,
                        Title = "Link Building Strategies",
                        Url = "https://example.com/course41"
                    },
                    new
                    {
                        CourseId = 71,
                        Description = "Optimizing for local search results.",
                        Duration = "8 hours",
                        InstructorId = 3,
                        Level = "Beginner",
                        Price = 330000m,
                        Rating = 4.6m,
                        Sale = 10,
                        SubCategoryId = 19,
                        Title = "Local SEO",
                        Url = "https://example.com/course42"
                    },
                    new
                    {
                        CourseId = 72,
                        Description = "Essential practices in email marketing.",
                        Duration = "10 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 190000m,
                        Rating = 4.5m,
                        Sale = 15,
                        SubCategoryId = 20,
                        Title = "Email Marketing Essentials",
                        Url = "https://example.com/course43"
                    },
                    new
                    {
                        CourseId = 73,
                        Description = "Writing effective email copy.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 200000m,
                        Rating = 4.7m,
                        Sale = 20,
                        SubCategoryId = 20,
                        Title = "Email Copywriting",
                        Url = "https://example.com/course44"
                    },
                    new
                    {
                        CourseId = 74,
                        Description = "Setting up automated email campaigns.",
                        Duration = "15 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 350000m,
                        Rating = 4.9m,
                        Sale = 25,
                        SubCategoryId = 20,
                        Title = "Automated Email Campaigns",
                        Url = "https://example.com/course45"
                    },
                    new
                    {
                        CourseId = 75,
                        Description = "An introduction to supply chain management.",
                        Duration = "12 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 170000m,
                        Rating = 4.7m,
                        Sale = 10,
                        SubCategoryId = 21,
                        Title = "Introduction to Supply Chain",
                        Url = "https://example.com/course46"
                    },
                    new
                    {
                        CourseId = 76,
                        Description = "Managing logistics in supply chain.",
                        Duration = "18 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 300000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 21,
                        Title = "Logistics Management",
                        Url = "https://example.com/course47"
                    },
                    new
                    {
                        CourseId = 77,
                        Description = "Optimizing inventory management.",
                        Duration = "25 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 300000m,
                        Rating = 4.9m,
                        Sale = 30,
                        SubCategoryId = 21,
                        Title = "Inventory Optimization",
                        Url = "https://example.com/course48"
                    },
                    new
                    {
                        CourseId = 78,
                        Description = "Controlling inventory levels.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 180000m,
                        Rating = 4.6m,
                        Sale = 15,
                        SubCategoryId = 22,
                        Title = "Inventory Control",
                        Url = "https://example.com/course49"
                    },
                    new
                    {
                        CourseId = 79,
                        Description = "Managing warehouse operations.",
                        Duration = "18 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 330000m,
                        Rating = 4.8m,
                        Sale = 25,
                        SubCategoryId = 22,
                        Title = "Warehouse Operations",
                        Url = "https://example.com/course50"
                    },
                    new
                    {
                        CourseId = 80,
                        Description = "Analyzing supply chain data.",
                        Duration = "8 hours",
                        InstructorId = 3,
                        Level = "Beginner",
                        Price = 330000m,
                        Rating = 4.6m,
                        Sale = 20,
                        SubCategoryId = 22,
                        Title = "Supply Chain Analytics",
                        Url = "https://example.com/course51"
                    },
                    new
                    {
                        CourseId = 81,
                        Description = "Basics of transportation management.",
                        Duration = "10 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 190000m,
                        Rating = 4.5m,
                        Sale = 15,
                        SubCategoryId = 23,
                        Title = "Transportation Basics",
                        Url = "https://example.com/course52"
                    },
                    new
                    {
                        CourseId = 82,
                        Description = "Managing freight logistics.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 200000m,
                        Rating = 4.7m,
                        Sale = 20,
                        SubCategoryId = 23,
                        Title = "Freight Management",
                        Url = "https://example.com/course53"
                    },
                    new
                    {
                        CourseId = 83,
                        Description = "Strategies for global logistics.",
                        Duration = "15 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 350000m,
                        Rating = 4.9m,
                        Sale = 25,
                        SubCategoryId = 23,
                        Title = "Global Logistics",
                        Url = "https://example.com/course54"
                    },
                    new
                    {
                        CourseId = 84,
                        Description = "Designing efficient warehouses.",
                        Duration = "12 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 160000m,
                        Rating = 4.6m,
                        Sale = 10,
                        SubCategoryId = 24,
                        Title = "Warehouse Design",
                        Url = "https://example.com/course55"
                    },
                    new
                    {
                        CourseId = 85,
                        Description = "Tracking inventory effectively.",
                        Duration = "18 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 330000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 24,
                        Title = "Inventory Tracking",
                        Url = "https://example.com/course56"
                    },
                    new
                    {
                        CourseId = 86,
                        Description = "Ensuring safety in warehouse operations.",
                        Duration = "8 hours",
                        InstructorId = 3,
                        Level = "Beginner",
                        Price = 330000m,
                        Rating = 4.6m,
                        Sale = 15,
                        SubCategoryId = 24,
                        Title = "Warehouse Safety",
                        Url = "https://example.com/course57"
                    },
                    new
                    {
                        CourseId = 87,
                        Description = "Fundamentals of procurement.",
                        Duration = "12 hours",
                        InstructorId = 2,
                        Level = "Beginner",
                        Price = 170000m,
                        Rating = 4.7m,
                        Sale = 10,
                        SubCategoryId = 25,
                        Title = "Procurement Fundamentals",
                        Url = "https://example.com/course58"
                    },
                    new
                    {
                        CourseId = 88,
                        Description = "Managing supplier relationships.",
                        Duration = "18 hours",
                        InstructorId = 3,
                        Level = "Intermediate",
                        Price = 300000m,
                        Rating = 4.8m,
                        Sale = 20,
                        SubCategoryId = 25,
                        Title = "Supplier Relationship Management",
                        Url = "https://example.com/course59"
                    },
                    new
                    {
                        CourseId = 89,
                        Description = "Developing negotiation skills for procurement.",
                        Duration = "25 hours",
                        InstructorId = 2,
                        Level = "Advanced",
                        Price = 300000m,
                        Rating = 4.9m,
                        Sale = 30,
                        SubCategoryId = 25,
                        Title = "Negotiation Skills in Procurement",
                        Url = "https://example.com/course60"
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Document", b =>
            {
                b.Property<int>("DocumentId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("DocumentID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                b.Property<DateTime?>("CreateDate")
                    .HasColumnType("datetime");

                b.Property<int?>("SectionId")
                    .HasColumnType("int")
                    .HasColumnName("SectionID");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)");

                b.Property<string>("Url")
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("URL");

                b.HasKey("DocumentId")
                    .HasName("PK__Document__1ABEEF6F6F6C41B2");

                b.HasIndex("SectionId");

                b.ToTable("Documents");

                b.HasData(
                    new
                    {
                        DocumentId = 1,
                        SectionId = 1,
                        Title = "Introduction to C# - Document 1",
                        Url = "https://example.com/document1"
                    },
                    new
                    {
                        DocumentId = 2,
                        SectionId = 1,
                        Title = "Introduction to C# - Document 2",
                        Url = "https://example.com/document2"
                    },
                    new
                    {
                        DocumentId = 3,
                        SectionId = 1,
                        Title = "Introduction to C# - Document 3",
                        Url = "https://example.com/document3"
                    },
                    new
                    {
                        DocumentId = 4,
                        SectionId = 1,
                        Title = "Introduction to C# - Document 4",
                        Url = "https://example.com/document4"
                    },
                    new
                    {
                        DocumentId = 5,
                        SectionId = 1,
                        Title = "Introduction to C# - Document 5",
                        Url = "https://example.com/document5"
                    },
                    new
                    {
                        DocumentId = 6,
                        SectionId = 2,
                        Title = "Advanced C# Programming - Document 1",
                        Url = "https://example.com/document6"
                    },
                    new
                    {
                        DocumentId = 7,
                        SectionId = 2,
                        Title = "Advanced C# Programming - Document 2",
                        Url = "https://example.com/document7"
                    },
                    new
                    {
                        DocumentId = 8,
                        SectionId = 2,
                        Title = "Advanced C# Programming - Document 3",
                        Url = "https://example.com/document8"
                    },
                    new
                    {
                        DocumentId = 9,
                        SectionId = 2,
                        Title = "Advanced C# Programming - Document 4",
                        Url = "https://example.com/document9"
                    },
                    new
                    {
                        DocumentId = 10,
                        SectionId = 2,
                        Title = "Advanced C# Programming - Document 5",
                        Url = "https://example.com/document10"
                    },
                    new
                    {
                        DocumentId = 11,
                        SectionId = 3,
                        Title = "C# for Web Development - Document 1",
                        Url = "https://example.com/document11"
                    },
                    new
                    {
                        DocumentId = 12,
                        SectionId = 3,
                        Title = "C# for Web Development - Document 2",
                        Url = "https://example.com/document12"
                    },
                    new
                    {
                        DocumentId = 13,
                        SectionId = 3,
                        Title = "C# for Web Development - Document 3",
                        Url = "https://example.com/document13"
                    },
                    new
                    {
                        DocumentId = 14,
                        SectionId = 3,
                        Title = "C# for Web Development - Document 4",
                        Url = "https://example.com/document14"
                    },
                    new
                    {
                        DocumentId = 15,
                        SectionId = 3,
                        Title = "C# for Web Development - Document 5",
                        Url = "https://example.com/document15"
                    },
                    new
                    {
                        DocumentId = 16,
                        SectionId = 4,
                        Title = "C# Design Patterns - Document 1",
                        Url = "https://example.com/document16"
                    },
                    new
                    {
                        DocumentId = 17,
                        SectionId = 4,
                        Title = "C# Design Patterns - Document 2",
                        Url = "https://example.com/document17"
                    },
                    new
                    {
                        DocumentId = 18,
                        SectionId = 4,
                        Title = "C# Design Patterns - Document 3",
                        Url = "https://example.com/document18"
                    },
                    new
                    {
                        DocumentId = 19,
                        SectionId = 4,
                        Title = "C# Design Patterns - Document 4",
                        Url = "https://example.com/document19"
                    },
                    new
                    {
                        DocumentId = 20,
                        SectionId = 4,
                        Title = "C# Design Patterns - Document 5",
                        Url = "https://example.com/document20"
                    },
                    new
                    {
                        DocumentId = 21,
                        SectionId = 5,
                        Title = "C# for Mobile Development - Document 1",
                        Url = "https://example.com/document21"
                    },
                    new
                    {
                        DocumentId = 22,
                        SectionId = 5,
                        Title = "C# for Mobile Development - Document 2",
                        Url = "https://example.com/document22"
                    },
                    new
                    {
                        DocumentId = 23,
                        SectionId = 5,
                        Title = "C# for Mobile Development - Document 3",
                        Url = "https://example.com/document23"
                    },
                    new
                    {
                        DocumentId = 24,
                        SectionId = 5,
                        Title = "C# for Mobile Development - Document 4",
                        Url = "https://example.com/document24"
                    },
                    new
                    {
                        DocumentId = 25,
                        SectionId = 5,
                        Title = "C# for Mobile Development - Document 5",
                        Url = "https://example.com/document25"
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Enrollment", b =>
            {
                b.Property<int>("EnrollmentId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("EnrollmentID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                b.Property<int?>("CourseId")
                    .HasColumnType("int")
                    .HasColumnName("CourseID");

                b.Property<DateTime?>("EnrollmentDate")
                    .HasColumnType("date");

                b.Property<int?>("StudentId")
                    .HasColumnType("int")
                    .HasColumnName("StudentID");

                b.HasKey("EnrollmentId")
                    .HasName("PK__Enrollme__7F6877FB59BADBB3");

                b.HasIndex("CourseId");

                b.HasIndex("StudentId");

                b.ToTable("Enrollments");

                b.HasData(
                    new
                    {
                        EnrollmentId = 1,
                        CourseId = 1,
                        EnrollmentDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9709),
                        StudentId = 1
                    },
                    new
                    {
                        EnrollmentId = 2,
                        CourseId = 2,
                        EnrollmentDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9712),
                        StudentId = 2
                    },
                    new
                    {
                        EnrollmentId = 3,
                        CourseId = 3,
                        EnrollmentDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9714),
                        StudentId = 3
                    },
                    new
                    {
                        EnrollmentId = 4,
                        CourseId = 4,
                        EnrollmentDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9715),
                        StudentId = 4
                    },
                    new
                    {
                        EnrollmentId = 5,
                        CourseId = 5,
                        EnrollmentDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9724),
                        StudentId = 5
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Lecture", b =>
            {
                b.Property<int>("LectureId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("LectureID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LectureId"));

                b.Property<string>("Content")
                    .HasColumnType("text");

                b.Property<TimeSpan?>("Duration")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("time");

                b.Property<int?>("Position")
                    .HasColumnType("int");

                b.Property<int?>("SectionId")
                    .HasColumnType("int")
                    .HasColumnName("SectionID");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)");

                b.Property<string>("VideoUrl")
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)")
                    .HasColumnName("VideoURL");

                b.HasKey("LectureId")
                    .HasName("PK__Lectures__B739F69F45AA0B10");

                b.HasIndex("SectionId");

                b.ToTable("Lectures");

                b.HasData(
                    new
                    {
                        LectureId = 1,
                        Content = "Introduction to C# content",
                        Duration = new TimeSpan(0, 0, 30, 0, 0),
                        SectionId = 1,
                        Title = "Introduction to C#",
                        VideoUrl = "https://example.com/video1"
                    },
                    new
                    {
                        LectureId = 2,
                        Content = "Basic syntax content",
                        Duration = new TimeSpan(0, 0, 45, 0, 0),
                        SectionId = 1,
                        Title = "Basic Syntax",
                        VideoUrl = "https://example.com/video2"
                    },
                    new
                    {
                        LectureId = 3,
                        Content = "Data types and variables content",
                        Duration = new TimeSpan(0, 0, 40, 0, 0),
                        SectionId = 1,
                        Title = "Data Types and Variables",
                        VideoUrl = "https://example.com/video3"
                    },
                    new
                    {
                        LectureId = 4,
                        Content = "Control flow statements content",
                        Duration = new TimeSpan(0, 0, 50, 0, 0),
                        SectionId = 1,
                        Title = "Control Flow Statements",
                        VideoUrl = "https://example.com/video4"
                    },
                    new
                    {
                        LectureId = 5,
                        Content = "Methods and functions content",
                        Duration = new TimeSpan(0, 0, 55, 0, 0),
                        SectionId = 1,
                        Title = "Methods and Functions",
                        VideoUrl = "https://example.com/video5"
                    },
                    new
                    {
                        LectureId = 6,
                        Content = "Advanced topics in C# content",
                        Duration = new TimeSpan(0, 1, 0, 0, 0),
                        SectionId = 2,
                        Title = "Advanced Topics in C#",
                        VideoUrl = "https://example.com/video6"
                    },
                    new
                    {
                        LectureId = 7,
                        Content = "LINQ and lambda expressions content",
                        Duration = new TimeSpan(0, 0, 50, 0, 0),
                        SectionId = 2,
                        Title = "LINQ and Lambda Expressions",
                        VideoUrl = "https://example.com/video7"
                    },
                    new
                    {
                        LectureId = 8,
                        Content = "Multithreading in C# content",
                        Duration = new TimeSpan(0, 0, 55, 0, 0),
                        SectionId = 2,
                        Title = "Multithreading in C#",
                        VideoUrl = "https://example.com/video8"
                    },
                    new
                    {
                        LectureId = 9,
                        Content = "Asynchronous programming content",
                        Duration = new TimeSpan(0, 1, 5, 0, 0),
                        SectionId = 2,
                        Title = "Asynchronous Programming",
                        VideoUrl = "https://example.com/video9"
                    },
                    new
                    {
                        LectureId = 10,
                        Content = "Advanced design patterns content",
                        Duration = new TimeSpan(0, 1, 10, 0, 0),
                        SectionId = 2,
                        Title = "Advanced Design Patterns",
                        VideoUrl = "https://example.com/video10"
                    },
                    new
                    {
                        LectureId = 11,
                        Content = "Introduction to ASP.NET Core content",
                        Duration = new TimeSpan(0, 0, 45, 0, 0),
                        SectionId = 3,
                        Title = "Introduction to ASP.NET Core",
                        VideoUrl = "https://example.com/video11"
                    },
                    new
                    {
                        LectureId = 12,
                        Content = "Building RESTful APIs content",
                        Duration = new TimeSpan(0, 1, 0, 0, 0),
                        SectionId = 3,
                        Title = "Building RESTful APIs",
                        VideoUrl = "https://example.com/video12"
                    },
                    new
                    {
                        LectureId = 13,
                        Content = "Entity Framework Core content",
                        Duration = new TimeSpan(0, 0, 55, 0, 0),
                        SectionId = 3,
                        Title = "Entity Framework Core",
                        VideoUrl = "https://example.com/video13"
                    },
                    new
                    {
                        LectureId = 14,
                        Content = "Authentication and authorization content",
                        Duration = new TimeSpan(0, 0, 50, 0, 0),
                        SectionId = 3,
                        Title = "Authentication and Authorization",
                        VideoUrl = "https://example.com/video14"
                    },
                    new
                    {
                        LectureId = 15,
                        Content = "Deploying ASP.NET Core applications content",
                        Duration = new TimeSpan(0, 1, 5, 0, 0),
                        SectionId = 3,
                        Title = "Deploying ASP.NET Core Applications",
                        VideoUrl = "https://example.com/video15"
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Models.SubCategory", b =>
            {
                b.Property<int>("SubCategoryId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("SubCategoryId");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryId"));

                b.Property<int?>("CategoryId")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)");

                b.HasKey("SubCategoryId")
                    .HasName("PK__SubCategori__19093A2B4E099F62");

                b.HasIndex("CategoryId");

                b.ToTable("SubCategory");

                b.HasData(
                    new
                    {
                        SubCategoryId = 1,
                        CategoryId = 1,
                        Name = "Software Development"
                    },
                    new
                    {
                        SubCategoryId = 2,
                        CategoryId = 1,
                        Name = "Data Science"
                    },
                    new
                    {
                        SubCategoryId = 3,
                        CategoryId = 1,
                        Name = "Networking"
                    },
                    new
                    {
                        SubCategoryId = 4,
                        CategoryId = 1,
                        Name = "Cyber Security"
                    },
                    new
                    {
                        SubCategoryId = 5,
                        CategoryId = 1,
                        Name = "Cloud Computing"
                    },
                    new
                    {
                        SubCategoryId = 6,
                        CategoryId = 2,
                        Name = "Entrepreneurship"
                    },
                    new
                    {
                        SubCategoryId = 7,
                        CategoryId = 2,
                        Name = "Management"
                    },
                    new
                    {
                        SubCategoryId = 8,
                        CategoryId = 2,
                        Name = "Finance"
                    },
                    new
                    {
                        SubCategoryId = 9,
                        CategoryId = 2,
                        Name = "Human Resources"
                    },
                    new
                    {
                        SubCategoryId = 10,
                        CategoryId = 2,
                        Name = "Sales"
                    },
                    new
                    {
                        SubCategoryId = 11,
                        CategoryId = 3,
                        Name = "Graphic Design"
                    },
                    new
                    {
                        SubCategoryId = 12,
                        CategoryId = 3,
                        Name = "Web Design"
                    },
                    new
                    {
                        SubCategoryId = 13,
                        CategoryId = 3,
                        Name = "UI/UX"
                    },
                    new
                    {
                        SubCategoryId = 14,
                        CategoryId = 3,
                        Name = "Animation"
                    },
                    new
                    {
                        SubCategoryId = 15,
                        CategoryId = 3,
                        Name = "Interior Design"
                    },
                    new
                    {
                        SubCategoryId = 16,
                        CategoryId = 4,
                        Name = "Digital Marketing"
                    },
                    new
                    {
                        SubCategoryId = 17,
                        CategoryId = 4,
                        Name = "Content Marketing"
                    },
                    new
                    {
                        SubCategoryId = 18,
                        CategoryId = 4,
                        Name = "Social Media Marketing"
                    },
                    new
                    {
                        SubCategoryId = 19,
                        CategoryId = 4,
                        Name = "SEO"
                    },
                    new
                    {
                        SubCategoryId = 20,
                        CategoryId = 4,
                        Name = "Email Marketing"
                    },
                    new
                    {
                        SubCategoryId = 21,
                        CategoryId = 5,
                        Name = "Supply Chain Management"
                    },
                    new
                    {
                        SubCategoryId = 22,
                        CategoryId = 5,
                        Name = "Inventory Management"
                    },
                    new
                    {
                        SubCategoryId = 23,
                        CategoryId = 5,
                        Name = "Transportation Management"
                    },
                    new
                    {
                        SubCategoryId = 24,
                        CategoryId = 5,
                        Name = "Warehouse Management"
                    },
                    new
                    {
                        SubCategoryId = 25,
                        CategoryId = 5,
                        Name = "Procurement"
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Review", b =>
            {
                b.Property<int>("ReviewId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("ReviewID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                b.Property<string>("Comment")
                    .HasColumnType("text");

                b.Property<int?>("CourseId")
                    .HasColumnType("int")
                    .HasColumnName("CourseID");

                b.Property<decimal>("Rating")
                    .HasColumnType("decimal(2, 1)");

                b.Property<int?>("ReOpen")
                    .HasColumnType("int");

                b.Property<DateTime>("ReviewDate")
                    .HasColumnType("date");

                b.Property<int?>("StudentId")
                    .HasColumnType("int")
                    .HasColumnName("StudentID");

                b.HasKey("ReviewId")
                    .HasName("PK__Reviews__74BC79AEB05343AB");

                b.HasIndex("CourseId");

                b.HasIndex("StudentId");

                b.ToTable("Reviews");

                b.HasData(
                    new
                    {
                        ReviewId = 1,
                        Comment = "Good course",
                        CourseId = 1,
                        Rating = 4.5m,
                        ReviewDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9895),
                        StudentId = 1
                    },
                    new
                    {
                        ReviewId = 2,
                        Comment = "Very informative",
                        CourseId = 1,
                        Rating = 4.2m,
                        ReviewDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9898),
                        StudentId = 1
                    },
                    new
                    {
                        ReviewId = 3,
                        Comment = "Helped me a lot",
                        CourseId = 1,
                        Rating = 4.0m,
                        ReviewDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9900),
                        StudentId = 1
                    },
                    new
                    {
                        ReviewId = 4,
                        Comment = "Could be better",
                        CourseId = 2,
                        Rating = 3.8m,
                        ReviewDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9903),
                        StudentId = 1
                    },
                    new
                    {
                        ReviewId = 5,
                        Comment = "Good content",
                        CourseId = 2,
                        Rating = 4.1m,
                        ReviewDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9904),
                        StudentId = 1
                    },
                    new
                    {
                        ReviewId = 6,
                        Comment = "Excellent content",
                        CourseId = 3,
                        Rating = 4.7m,
                        ReviewDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9906),
                        StudentId = 4
                    },
                    new
                    {
                        ReviewId = 7,
                        Comment = "Very detailed",
                        CourseId = 4,
                        Rating = 4.8m,
                        ReviewDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9908),
                        StudentId = 1
                    },
                    new
                    {
                        ReviewId = 8,
                        Comment = "Interesting course",
                        CourseId = 5,
                        Rating = 3.9m,
                        ReviewDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9910),
                        StudentId = 4
                    },
                    new
                    {
                        ReviewId = 9,
                        Comment = "Enjoyed learning from it",
                        CourseId = 5,
                        Rating = 4.3m,
                        ReviewDate = new DateTime(2024, 7, 17, 20, 24, 34, 130, DateTimeKind.Local).AddTicks(9911),
                        StudentId = 4
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Role", b =>
            {
                b.Property<int>("RoleId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("RoleID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)");

                b.HasKey("RoleId")
                    .HasName("PK__Role__8AFACE3A672CA399");

                b.ToTable("Role", (string)null);

                b.HasData(
                    new
                    {
                        RoleId = 1,
                        Name = "Student"
                    },
                    new
                    {
                        RoleId = 2,
                        Name = "Instructor"
                    },
                    new
                    {
                        RoleId = 3,
                        Name = "Admin"
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Section", b =>
            {
                b.Property<int>("SectionId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("SectionID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"));

                b.Property<int?>("CourseId")
                    .HasColumnType("int")
                    .HasColumnName("CourseID");

                b.Property<TimeSpan?>("Duration")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("time");

                b.Property<int?>("Position")
                    .HasColumnType("int");

                b.Property<string>("Title")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)");

                b.HasKey("SectionId")
                    .HasName("PK__Sections__80EF08920752F11A");

                b.HasIndex("CourseId");

                b.ToTable("Sections");

                b.HasData(
                    new
                    {
                        SectionId = 1,
                        CourseId = 1,
                        Duration = new TimeSpan(0, 1, 0, 0, 0),
                        Title = "Introduction to C# - Section 1"
                    },
                    new
                    {
                        SectionId = 2,
                        CourseId = 1,
                        Duration = new TimeSpan(0, 1, 30, 0, 0),
                        Title = "Introduction to C# - Section 2"
                    },
                    new
                    {
                        SectionId = 3,
                        CourseId = 1,
                        Duration = new TimeSpan(0, 2, 0, 0, 0),
                        Title = "Introduction to C# - Section 3"
                    },
                    new
                    {
                        SectionId = 4,
                        CourseId = 1,
                        Duration = new TimeSpan(0, 1, 12, 0, 0),
                        Title = "Introduction to C# - Section 4"
                    },
                    new
                    {
                        SectionId = 5,
                        CourseId = 1,
                        Duration = new TimeSpan(0, 1, 48, 0, 0),
                        Title = "Introduction to C# - Section 5"
                    },
                    new
                    {
                        SectionId = 6,
                        CourseId = 2,
                        Duration = new TimeSpan(0, 1, 0, 0, 0),
                        Title = "Advanced C# Programming - Section 1"
                    },
                    new
                    {
                        SectionId = 7,
                        CourseId = 2,
                        Duration = new TimeSpan(0, 1, 30, 0, 0),
                        Title = "Advanced C# Programming - Section 2"
                    },
                    new
                    {
                        SectionId = 8,
                        CourseId = 2,
                        Duration = new TimeSpan(0, 2, 0, 0, 0),
                        Title = "Advanced C# Programming - Section 3"
                    },
                    new
                    {
                        SectionId = 9,
                        CourseId = 2,
                        Duration = new TimeSpan(0, 1, 12, 0, 0),
                        Title = "Advanced C# Programming - Section 4"
                    },
                    new
                    {
                        SectionId = 10,
                        CourseId = 2,
                        Duration = new TimeSpan(0, 1, 48, 0, 0),
                        Title = "Advanced C# Programming - Section 5"
                    },
                    new
                    {
                        SectionId = 11,
                        CourseId = 3,
                        Duration = new TimeSpan(0, 1, 0, 0, 0),
                        Title = "C# for Web Development - Section 1"
                    },
                    new
                    {
                        SectionId = 12,
                        CourseId = 3,
                        Duration = new TimeSpan(0, 1, 30, 0, 0),
                        Title = "C# for Web Development - Section 2"
                    },
                    new
                    {
                        SectionId = 13,
                        CourseId = 3,
                        Duration = new TimeSpan(0, 2, 0, 0, 0),
                        Title = "C# for Web Development - Section 3"
                    },
                    new
                    {
                        SectionId = 14,
                        CourseId = 3,
                        Duration = new TimeSpan(0, 1, 12, 0, 0),
                        Title = "C# for Web Development - Section 4"
                    },
                    new
                    {
                        SectionId = 15,
                        CourseId = 3,
                        Duration = new TimeSpan(0, 1, 48, 0, 0),
                        Title = "C# for Web Development - Section 5"
                    },
                    new
                    {
                        SectionId = 16,
                        CourseId = 4,
                        Duration = new TimeSpan(0, 1, 0, 0, 0),
                        Title = "C# Design Patterns - Section 1"
                    },
                    new
                    {
                        SectionId = 17,
                        CourseId = 4,
                        Duration = new TimeSpan(0, 1, 30, 0, 0),
                        Title = "C# Design Patterns - Section 2"
                    },
                    new
                    {
                        SectionId = 18,
                        CourseId = 4,
                        Duration = new TimeSpan(0, 2, 0, 0, 0),
                        Title = "C# Design Patterns - Section 3"
                    },
                    new
                    {
                        SectionId = 19,
                        CourseId = 4,
                        Duration = new TimeSpan(0, 1, 12, 0, 0),
                        Title = "C# Design Patterns - Section 4"
                    },
                    new
                    {
                        SectionId = 20,
                        CourseId = 4,
                        Duration = new TimeSpan(0, 1, 48, 0, 0),
                        Title = "C# Design Patterns - Section 5"
                    },
                    new
                    {
                        SectionId = 21,
                        CourseId = 5,
                        Duration = new TimeSpan(0, 1, 0, 0, 0),
                        Title = "C# for Mobile Development - Section 1"
                    },
                    new
                    {
                        SectionId = 22,
                        CourseId = 5,
                        Duration = new TimeSpan(0, 1, 30, 0, 0),
                        Title = "C# for Mobile Development - Section 2"
                    },
                    new
                    {
                        SectionId = 23,
                        CourseId = 5,
                        Duration = new TimeSpan(0, 2, 0, 0, 0),
                        Title = "C# for Mobile Development - Section 3"
                    },
                    new
                    {
                        SectionId = 24,
                        CourseId = 5,
                        Duration = new TimeSpan(0, 1, 12, 0, 0),
                        Title = "C# for Mobile Development - Section 4"
                    },
                    new
                    {
                        SectionId = 25,
                        CourseId = 5,
                        Duration = new TimeSpan(0, 1, 48, 0, 0),
                        Title = "C# for Mobile Development - Section 5"
                    });
            });

            modelBuilder.Entity("EduCore.Domain.StudentCertificate", b =>
            {
                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.Property<int>("CertificateId")
                    .HasColumnType("int");

                b.Property<DateTime>("CompletionDate")
                    .HasColumnType("datetime2");

                b.Property<TimeSpan>("CompletionTime")
                    .HasColumnType("time");

                b.HasKey("UserId", "CertificateId");

                b.HasIndex("CertificateId");

                b.ToTable("StudentCertificates");

                b.HasData(
                    new
                    {
                        UserId = 1,
                        CertificateId = 1,
                        CompletionDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        CompletionTime = new TimeSpan(0, 2, 0, 0, 0)
                    },
                    new
                    {
                        UserId = 2,
                        CertificateId = 2,
                        CompletionDate = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        CompletionTime = new TimeSpan(0, 1, 30, 0, 0)
                    },
                    new
                    {
                        UserId = 3,
                        CertificateId = 1,
                        CompletionDate = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        CompletionTime = new TimeSpan(0, 1, 0, 0, 0)
                    },
                    new
                    {
                        UserId = 4,
                        CertificateId = 2,
                        CompletionDate = new DateTime(2023, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        CompletionTime = new TimeSpan(0, 2, 30, 0, 0)
                    },
                    new
                    {
                        UserId = 5,
                        CertificateId = 1,
                        CompletionDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        CompletionTime = new TimeSpan(0, 1, 48, 0, 0)
                    });
            });

            modelBuilder.Entity("EduCore.Domain.StudentCourse", b =>
            {
                b.Property<int>("UserId")
                    .HasColumnType("int")
                    .HasColumnName("UserID");

                b.Property<int>("CourseId")
                    .HasColumnType("int")
                    .HasColumnName("CourseID");

                b.Property<bool>("IsInCart")
                    .HasColumnType("bit");

                b.HasKey("UserId", "CourseId")
                    .HasName("PK__StudentC__7B1A1BB4D2465F24");

                b.HasIndex("CourseId");

                b.ToTable("StudentCourses");
            });

            modelBuilder.Entity("EduCore.Domain.SystemSetting", b =>
            {
                b.Property<int>("SettingId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("SettingID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettingId"));

                b.Property<string>("Language")
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)");

                b.Property<bool>("NotificationsEnabled")
                    .HasColumnType("bit");

                b.Property<string>("Theme")
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnType("varchar(50)");

                b.Property<int?>("UserId")
                    .HasColumnType("int")
                    .HasColumnName("UserID");

                b.HasKey("SettingId")
                    .HasName("PK__SystemSe__54372AFDC5ADF01D");

                b.HasIndex("UserId");

                b.ToTable("SystemSettings");

                b.HasData(
                    new
                    {
                        SettingId = 1,
                        Language = "English",
                        NotificationsEnabled = true,
                        Theme = "Dark",
                        UserId = 1
                    },
                    new
                    {
                        SettingId = 2,
                        Language = "French",
                        NotificationsEnabled = false,
                        Theme = "Light",
                        UserId = 2
                    },
                    new
                    {
                        SettingId = 3,
                        Language = "Spanish",
                        NotificationsEnabled = true,
                        Theme = "Light",
                        UserId = 3
                    },
                    new
                    {
                        SettingId = 4,
                        Language = "German",
                        NotificationsEnabled = false,
                        Theme = "Dark",
                        UserId = 4
                    },
                    new
                    {
                        SettingId = 5,
                        Language = "Chinese",
                        NotificationsEnabled = true,
                        Theme = "Dark",
                        UserId = 5
                    });
            });

            modelBuilder.Entity("EduCore.Domain.User", b =>
            {
                b.Property<int>("UserId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasColumnName("UserID");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                b.Property<string>("Bio")
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnType("varchar(100)");

                b.Property<string>("FullName")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnType("varchar(100)");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnType("varchar(255)");

                b.Property<string>("Phone")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnType("varchar(100)");

                b.Property<int?>("RoleId")
                    .HasColumnType("int")
                    .HasColumnName("RoleID");

                b.Property<string>("UrlImage")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("UserId")
                    .HasName("PK__Users__1788CCACEF9D4767");

                b.HasIndex("RoleId");

                b.ToTable("Users");

                b.HasData(
                    new
                    {
                        UserId = 1,
                        Bio = "Enthusiastic learner and avid programmer.",
                        Email = "alice.johnson@example.com",
                        FullName = "Alice Johnson",
                        Password = "password123",
                        Phone = "555-1234",
                        RoleId = 1
                    },
                    new
                    {
                        UserId = 2,
                        Bio = "Experienced project manager with a passion for software development.",
                        Email = "bob.smith@example.com",
                        FullName = "Bob Smith",
                        Password = "password123",
                        Phone = "555-5678",
                        RoleId = 2
                    },
                    new
                    {
                        UserId = 3,
                        Bio = "Creative designer with a knack for UI/UX.",
                        Email = "carol.davis@example.com",
                        FullName = "Carol Davis",
                        Password = "password123",
                        Phone = "555-9876",
                        RoleId = 2
                    },
                    new
                    {
                        UserId = 4,
                        Bio = "Dedicated data scientist with a background in machine learning.",
                        Email = "david.brown@example.com",
                        FullName = "David Brown",
                        Password = "password123",
                        Phone = "555-4321",
                        RoleId = 1
                    },
                    new
                    {
                        UserId = 5,
                        Bio = "Marketing specialist with a love for digital strategies.",
                        Email = "eva.wilson@example.com",
                        FullName = "Eva Wilson",
                        Password = "password123",
                        Phone = "555-8765",
                        RoleId = 3
                    });
            });

            modelBuilder.Entity("EduCore.Domain.Checkout", b =>
            {
                b.HasOne("EduCore.Domain.Course", "Course")
                    .WithMany("Checkouts")
                    .HasForeignKey("CourseId")
                    .HasConstraintName("FK__Checkouts__Cours__571DF1D5");

                b.HasOne("EduCore.Domain.User", "Student")
                    .WithMany("Checkouts")
                    .HasForeignKey("StudentId")
                    .HasConstraintName("FK__Checkouts__Stude__5629CD9C");

                b.Navigation("Course");

                b.Navigation("Student");
            });

            modelBuilder.Entity("EduCore.Domain.Course", b =>
            {
                b.HasOne("EduCore.Domain.User", "Instructor")
                    .WithMany("Courses")
                    .HasForeignKey("InstructorId")
                    .HasConstraintName("FK__Courses__Instruc__3F466844");

                b.HasOne("EduCore.Domain.Models.SubCategory", "SubCategory")
                    .WithMany("Courses")
                    .HasForeignKey("SubCategoryId")
                    .HasConstraintName("FK__Courses__SubCategor__3E52440B");

                b.Navigation("Instructor");

                b.Navigation("SubCategory");
            });

            modelBuilder.Entity("EduCore.Domain.Document", b =>
            {
                b.HasOne("EduCore.Domain.Section", "Section")
                    .WithMany("Documents")
                    .HasForeignKey("SectionId")
                    .HasConstraintName("FK__Documents__Secti__47DBAE45");

                b.Navigation("Section");
            });

            modelBuilder.Entity("EduCore.Domain.Enrollment", b =>
            {
                b.HasOne("EduCore.Domain.Course", "Course")
                    .WithMany("Enrollments")
                    .HasForeignKey("CourseId")
                    .HasConstraintName("FK__Enrollmen__Cours__4F7CD00D");

                b.HasOne("EduCore.Domain.User", "Student")
                    .WithMany("Enrollments")
                    .HasForeignKey("StudentId")
                    .HasConstraintName("FK__Enrollmen__Stude__4E88ABD4");

                b.Navigation("Course");

                b.Navigation("Student");
            });

            modelBuilder.Entity("EduCore.Domain.Lecture", b =>
            {
                b.HasOne("EduCore.Domain.Section", "Section")
                    .WithMany("Lectures")
                    .HasForeignKey("SectionId")
                    .HasConstraintName("FK__Lectures__Sectio__44FF419A");

                b.Navigation("Section");
            });

            modelBuilder.Entity("EduCore.Domain.Models.SubCategory", b =>
            {
                b.HasOne("EduCore.Domain.Category", "Category")
                    .WithMany("SubCategories")
                    .HasForeignKey("CategoryId");

                b.Navigation("Category");
            });

            modelBuilder.Entity("EduCore.Domain.Review", b =>
            {
                b.HasOne("EduCore.Domain.Course", "Course")
                    .WithMany("Reviews")
                    .HasForeignKey("CourseId")
                    .HasConstraintName("FK__Reviews__CourseI__534D60F1");

                b.HasOne("EduCore.Domain.User", "Student")
                    .WithMany("Reviews")
                    .HasForeignKey("StudentId")
                    .HasConstraintName("FK__Reviews__Student__52593CB8");

                b.Navigation("Course");

                b.Navigation("Student");
            });

            modelBuilder.Entity("EduCore.Domain.Section", b =>
            {
                b.HasOne("EduCore.Domain.Course", "Course")
                    .WithMany("Sections")
                    .HasForeignKey("CourseId")
                    .HasConstraintName("FK__Sections__Course__4222D4EF");

                b.Navigation("Course");
            });

            modelBuilder.Entity("EduCore.Domain.StudentCertificate", b =>
            {
                b.HasOne("EduCore.Domain.Certificate", "Certificate")
                    .WithMany("StudentCertificates")
                    .HasForeignKey("CertificateId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("EduCore.Domain.User", "User")
                    .WithMany("StudentCertificates")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Certificate");

                b.Navigation("User");
            });

            modelBuilder.Entity("EduCore.Domain.StudentCourse", b =>
            {
                b.HasOne("EduCore.Domain.Course", "Course")
                    .WithMany("StudentCourses")
                    .HasForeignKey("CourseId")
                    .IsRequired()
                    .HasConstraintName("FK__StudentCo__Cours__4BAC3F29");

                b.HasOne("EduCore.Domain.User", "User")
                    .WithMany("StudentCourses")
                    .HasForeignKey("UserId")
                    .IsRequired()
                    .HasConstraintName("FK__StudentCo__UserI__4AB81AF0");

                b.Navigation("Course");

                b.Navigation("User");
            });

            modelBuilder.Entity("EduCore.Domain.SystemSetting", b =>
            {
                b.HasOne("EduCore.Domain.User", "User")
                    .WithMany("SystemSettings")
                    .HasForeignKey("UserId")
                    .HasConstraintName("FK__SystemSet__UserI__59FA5E80");

                b.Navigation("User");
            });

            modelBuilder.Entity("EduCore.Domain.User", b =>
            {
                b.HasOne("EduCore.Domain.Role", "Role")
                    .WithMany("Users")
                    .HasForeignKey("RoleId")
                    .HasConstraintName("FK__Users__RoleID__398D8EEE");

                b.Navigation("Role");
            });

            modelBuilder.Entity("EduCore.Domain.Category", b =>
            {
                b.Navigation("SubCategories");
            });

            modelBuilder.Entity("EduCore.Domain.Certificate", b =>
            {
                b.Navigation("StudentCertificates");
            });

            modelBuilder.Entity("EduCore.Domain.Course", b =>
            {
                b.Navigation("Checkouts");

                b.Navigation("Enrollments");

                b.Navigation("Reviews");

                b.Navigation("Sections");

                b.Navigation("StudentCourses");
            });

            modelBuilder.Entity("EduCore.Domain.Models.SubCategory", b =>
            {
                b.Navigation("Courses");
            });

            modelBuilder.Entity("EduCore.Domain.Role", b =>
            {
                b.Navigation("Users");
            });

            modelBuilder.Entity("EduCore.Domain.Section", b =>
            {
                b.Navigation("Documents");

                b.Navigation("Lectures");
            });

            modelBuilder.Entity("EduCore.Domain.User", b =>
            {
                b.Navigation("Checkouts");

                b.Navigation("Courses");

                b.Navigation("Enrollments");

                b.Navigation("Reviews");

                b.Navigation("StudentCertificates");

                b.Navigation("StudentCourses");

                b.Navigation("SystemSettings");
            });
#pragma warning restore 612, 618
        }
    }
}